apply plugin: "com.android.application"
apply plugin: "scala.android"

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    android {
        packagingOptions {
            doNotStrip '**/*.so'
        }
    }

    defaultConfig {
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        applicationId 'wtf.nbd.obw'
        multiDexEnabled true
        targetSdkVersion 31
        minSdkVersion 26

        versionName '0.2.1'
        versionCode 12
    }

    dexOptions {
        javaMaxHeapSize '12g'
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('STORE_FILE')) {
                storeFile file(STORE_FILE)
                storePassword STORE_PASSWORD
                keyAlias KEY_ALIAS
                keyPassword KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            applicationIdSuffix ".dev"
            buildConfigField "String", "CHAIN", '"mainnet"'
        }
        signet {
            minifyEnabled false
            proguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            applicationIdSuffix ".signet"
            buildConfigField "String", "CHAIN", '"signet"'
        }
        release {
            minifyEnabled false
            proguardFiles 'proguard-rules.pro'
            signingConfig signingConfigs.debug
            buildConfigField "String", "CHAIN", '"mainnet"'
            if (project.hasProperty('STORE_FILE')) {
                signingConfig signingConfigs.release
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "obw-${defaultConfig.versionName}.apk"
        }
    }

    packagingOptions {
        exclude 'META-INF/**'
    }
}

tasks.withType(ScalaCompile) {
    scalaCompileOptions.with{
        additionalParameters = [
            '-Ymacro-annotations',

            // "-deprecation", // Emit warning and location for usages of deprecated APIs.
            "-explaintypes", // Explain type errors in more detail.
            "-feature", // Emit warning and location for usages of features that should be imported explicitly.
            "-language:existentials", // Existential types (besides wildcard types) can be written and inferred
            "-language:experimental.macros", // Allow macro definition (besides implementation and application)
            "-language:higherKinds", // Allow higher-kinded types
            "-language:implicitConversions", // Allow definition of implicit functions called views
            "-unchecked", // Enable additional warnings where generated code depends on assumptions.
            "-Xlint:adapted-args", // Warn if an argument list is modified to match the receiver.
            "-Xlint:constant", // Evaluation of a constant arithmetic expression results in an error.
            "-Xlint:delayedinit-select", // Selecting member of DelayedInit.
            "-Xlint:doc-detached", // A Scaladoc comment appears to be detached from its element.
            "-Xlint:inaccessible", // Warn about inaccessible types in method signatures.
            "-Xlint:infer-any", // Warn when a type argument is inferred to be `Any`.
            "-Xlint:missing-interpolator", // A string literal appears to be missing an interpolator id.
            "-Xlint:nullary-unit", // Warn when nullary methods return Unit.
            "-Xlint:option-implicit", // Option.apply used implicit view.
            "-Xlint:package-object-classes", // Class or object defined in package object.
            "-Xlint:poly-implicit-overload", // Parameterized overloaded implicit methods are not visible as view bounds.
            "-Xlint:private-shadow", // A private field (or class parameter) shadows a superclass field.
            "-Xlint:stars-align", // Pattern sequence wildcard must align with sequence component.
            "-Xlint:type-parameter-shadow", // A local type parameter shadows a type already in scope.
            // "-Ywarn-dead-code", // Warn when dead code is identified.
            "-Ywarn-extra-implicit", // Warn when more than one implicit parameter section is defined.
            "-Ywarn-numeric-widen", // Warn when numerics are widened.
            "-Ywarn-unused:implicits", // Warn if an implicit parameter is unused.
            "-Ywarn-unused:imports", // Warn if an import selector is not referenced.
            "-Ywarn-unused:locals", // Warn if a local definition is unused.
            // "-Ywarn-unused:params", // Warn if a value parameter is unused.
            "-Ywarn-unused:patvars", // Warn if a variable bound in a pattern is unused.
            "-Ywarn-unused:privates", // Warn if a private member is unused.
            // "-Ywarn-value-discard", // Warn when non-Unit expression results are unused.
            "-Ybackend-parallelism", "8", // Enable paralellisation â€” change to desired number!
            "-Ycache-plugin-class-loader:last-modified", // Enables caching of classloaders for compiler plugins
            "-Ycache-macro-class-loader:last-modified" // and macro definitions. This can lead to performance improvements.
        ]
    }
}

dependencies {
    // Android-specific
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.work:work-runtime:2.7.1'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'androidx.security:security-crypto:1.0.0'
    implementation 'com.cottacush:CurrencyEditText:0.0.10'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'com.google.code.ndef-tools-for-android:ndeftools:1.2.4'
    implementation 'com.guardanis:applock:3.0.2'
    implementation 'com.mig35:carousellayoutmanager:1.4.6'
    implementation('com.ornach.nobobutton:nobobutton:1.6') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    implementation('com.chauthai.swipereveallayout:swipe-reveal-layout:1.4.1') {
        exclude group: 'com.android.support', module: 'support-v4'
    }
    implementation('com.danilomendes.progressbar:progressbar:1.0.2') {
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }
    implementation('com.hootsuite.android:nachos:1.2.0'){
        exclude group: 'com.android.support', module: 'support-compat'
    }
    implementation 'com.journeyapps:zxing-android-embedded:4.3.0'
    implementation 'com.github.mmin18:realtimeblurview:1.2.1'
    implementation 'org.apmem.tools:layouts:1.10@aar'

    // Wallet Utils
    implementation 'com.sparrowwallet:hummingbird:1.6.5'

    // Scala
    implementation 'org.scala-lang:scala-library:2.13.8'

    // Related to Immortan
    implementation 'com.fiatjaf:immortan_2.13:0.7.12'
    implementation 'fr.acinq.secp256k1:secp256k1-kmp-jni-android:0.6.4'

    // Built-in Tor
    implementation 'info.guardianproject:tor-android:0.4.6.9'
    implementation 'info.guardianproject:jtorctl:0.4.5.7'

    // Android tests
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
